prototype(Shel.Neos.Logs:View.Index) < prototype(Neos.Fusion:Component) {
    @propTypes {
        @strict = true
        // TODO: Define shape
        logs = ${PropTypes.arrayOf(PropTypes.dataStructure({}))}
        exceptions = ${PropTypes.arrayOf(PropTypes.instanceOf('Shel\Neos\Logs\Domain\ParsedException'))}
        // TODO: Define shape
        flashMessages = ${PropTypes.arrayOf(PropTypes.dataStructure({}))}
        numberOfPages = ${PropTypes.integer}
        numberOfExceptions = ${PropTypes.integer}
        exceptionsPage = ${PropTypes.integer}
    }

    logs = ${logs}
    exceptions = ${exceptions}
    flashMessages = ${flashMessages}
    numberOfPages = ${numberOfPages}
    numberOfExceptions = ${numberOfExceptions}
    exceptionsPage = ${exceptionsPage}

    renderer = afx`
        <div id="shel-neos-logs-app">
            <Shel.Neos.Logs:Component.LogList logs={props.logs} />

            <h2>Exceptions ({numberOfExceptions})</h2>
            <Shel.Neos.Logs:Component.SearchBox exceptions={props.exceptions} />
            <div class="pagination" @if.hasMultiplePages={props.numberOfPages > 1}>
                <Neos.Fusion:Link.Action
                    class="neos-button"
                    href.action="index"
                    href.arguments.exceptionsPage={0}
                    @if.notFirst={props.exceptionsPage != 0}
                >
                    First
                </Neos.Fusion:Link.Action>
                <Neos.Fusion:Link.Action
                    @if.notFirst={props.exceptionsPage != 0}
                    class="neos-button"
                    href.action="index"
                    href.arguments.exceptionsPage={props.exceptionsPage - 1}
                >
                    &lt;
                </Neos.Fusion:Link.Action>
                <span class="neos-button">
                    Page {exceptionsPage + 1}
                </span>
                <Neos.Fusion:Link.Action
                    @if.notLast={props.exceptionsPage < props.numberOfPages - 1}
                    class="neos-button" href.action="index"
                    href.arguments.exceptionsPage={props.exceptionsPage + 1}
                >
                    &gt;
                </Neos.Fusion:Link.Action>
                <Neos.Fusion:Link.Action
                    class="neos-button"
                    href.action="index"
                    href.arguments.exceptionsPage={props.numberOfPages - 1}
                    @if.notLast={props.exceptionsPage < props.numberOfPages - 1}
                >
                    Last
                </Neos.Fusion:Link.Action>
                <form method="post" class="page-selector" @if.hasMorePages={props.numberOfPages > 2}>
                    <Neos.Fusion:UriBuilder action="index" @path="attributes.action" />
                    <input type="hidden" name="__csrfToken" value={Security.csrfToken()}/>
                    <select name="moduleArguments[exceptionsPage]" onchange="this.form.submit();" style="margin-left:1rem;">
                        <option value="">Select page</option>
                        <Neos.Fusion:Loop items={Array.range(0, props.numberOfPages - 1)}>
                            <option value={item}>Go to page {item+1}</option>
                        </Neos.Fusion:Loop>
                    </select>
                </form>
            </div>
            <Shel.Neos.Logs:Component.ExceptionList exceptions={props.exceptions} />
        </div>
        <Shel.Neos.Logs:Component.FlashMessages flashMessages={props.flashMessages} />
    `
}
